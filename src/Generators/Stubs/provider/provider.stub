<?php

namespace $NAMESPACE$;

use Illuminate\Support\ServiceProvider;

class $CLASS$ extends ServiceProvider
{
    /**
     * Bootstrap services.
     *
     * @return void
     */
    public function boot()
    {

        $this->loadMigrationsFrom(__DIR__.'/../../database/migrations');
        // $this->loadTranslationsFrom(   __DIR__ . '/../../resources/lang' , '$VIEWS_PACKAGE$');
        $this->loadViewsFrom(__DIR__.'/../../resources/views', '$VIEWS_PACKAGE$');
        $this->publishes([
            __DIR__.'/../../resources/views' => resource_path('views/$VIEWS_PACKAGE$'),
        //  __DIR__ . '/../../resources/lang' => resource_path('lang/$VIEWS_PACKAGE$'),
        ]);

        $entities = [
            //:::entityName:::
        ];

        $this->registerEntitiesConfig($entities);

        //:bootMethodProvider:

    }

    /**
     * Register services.
     *
     * @return void
     */
    public function register()
    {
        include __DIR__ . '/../../routes/api.php';
        include __DIR__ . '/../../routes/web.php';

        //:registerMethodProvider:

    }


    public function registerEntitiesConfig($entities) {
        $publishPaths = [];
        foreach($entities as $entity) {
            if(file_exists( __DIR__.'/../../config/entities/' . $entity . '.php')) {
                $publishPaths[ __DIR__.'/../../config/entities/' . $entity . '.php' ] = config_path('entities/' . $entity . '.php');
            }
        }
        $this->publishes($publishPaths, 'config');

        foreach($entities as $entity) {
            if(file_exists( __DIR__.'/../../config/entities/' . $entity . '.php')) {
                $this->mergeConfigFrom( __DIR__.'/../../config/entities/' . $entity . '.php', 'entities.' . $entity);
            }
        }
    }
}
